services:
  mysuperapp-1:
    build:
      context: .
      dockerfile: Dockerfile
  db:
    image: postgres:13.2
    ports:
      - "127.0.0.1:5432:5432"
    command: [ "postgres", "-c", "log_statement=all", "-c", "log_destination=stderr" ]
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}" ]
      interval: 1s
      retries: 20
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - database-data:/var/lib/postgresql/data

  migrations:
    image: ghcr.io/kukymbr/goose-docker:3.24.2
    restart: no
    depends_on:
      db:
        condition: service_healthy
    environment:
      - GOOSE_DRIVER=postgres
      - GOOSE_DBSTRING=host=${DB_HOST} port=${DB_PORT} user=${DB_USER} password=${DB_PASSWORD} dbname=${DB_NAME}
      - GOOSE_VERBOSE=true
      - GOOSE_COMMAND=${GOOSE_COMMAND}
      - GOOSE_COMMAND_ARG=${GOOSE_COMMAND_ARG}
    volumes:
      - ./migrations:/migrations


  contact-service-1:
    build:
      context: .
      dockerfile: Dockerfile


  contact-service-2:
    build:
      context: .
      dockerfile: Dockerfile


  contact-service-3:
    build:
      context: .
      dockerfile: Dockerfile


  balancer:
    image: nginx:alpine3.21
    ports:
      - 8080:80
    volumes:
      - ./nginx:/etc/nginx/templates

volumes:
  database-data: